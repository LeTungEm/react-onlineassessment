{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\LeTungEm\\\\letungem-onlineassessment\\\\src\\\\components\\\\User\\\\Todo\\\\ListTask\\\\ListTask.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../../../../context/Context\";\nimport UsersService from \"../../../../service/UsersService\";\nimport Heading from \"../../../UI/Library/Heading\";\nimport CompletedIcon from \"../../../UI/Library/icon/CompletedIcon\";\nimport NotCompletedIcon from \"../../../UI/Library/icon/NotCompletedIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst users = new UsersService();\nconst ListTask = _ref => {\n  _s();\n  let {\n    userID\n  } = _ref;\n  const [buttonLoading, setButtonLoading] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const {\n    todoContext\n  } = useContext(Context);\n  const {\n    userTasks,\n    setUserTasks\n  } = todoContext;\n  const countCompletedTasks = () => {\n    let sum = 0;\n    tasks.forEach(task => {\n      if (task.completed === true) {\n        sum++;\n      }\n    });\n    return sum;\n  };\n  const sortList = async list => {\n    let result = [];\n    let data = await list;\n    data.map(task => {\n      if (task.completed === false) result = [task, ...result];else result = [...result, task];\n      return 0;\n    });\n    return result;\n  };\n  const getAllTasks = useCallback(async userID => {\n    let data = await users.getByID(userID);\n    return data.data;\n  }, []);\n  const findTaskIndexByID = id => {\n    return tasks.findIndex(task => task.id === id);\n  };\n  const completeTask = taskID => {\n    setButtonLoading(pre => [...pre, taskID]);\n    users.completeTask(taskID).then(async res => {\n      if (res.data) {\n        let taskChangedIndex = findTaskIndexByID(res.data.id);\n        let taskCopy = [...tasks];\n        taskCopy[taskChangedIndex] = res.data;\n        let listSorted = await sortList(taskCopy);\n        let listTask = userTasks;\n        listTask[userID] = listSorted;\n        setUserTasks(listTask);\n        setTasks(pre => {\n          pre[taskChangedIndex] = res.data;\n          return pre;\n        });\n        setButtonLoading(pre => pre.filter(loading => loading !== res.data.id));\n      } else {\n        setButtonLoading([]);\n      }\n    });\n  };\n  useEffect(() => {\n    if (userID) {\n      let listTask = userTasks;\n      if (listTask[userID] !== undefined) {\n        setTasks(listTask[userID]);\n      } else {\n        let result = getAllTasks(userID);\n        let listSorted = sortList(result);\n        listSorted.then(res => {\n          listTask[userID] = res;\n          setUserTasks(listTask);\n          setTasks(res);\n        });\n      }\n    }\n  }, [getAllTasks, setUserTasks, userID, userTasks]);\n  let newListTask = [];\n  tasks.forEach(task => {\n    if (task.completed === false) newListTask = [task, ...newListTask];else newListTask = [...newListTask, task];\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      text: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"border rounded-lg h-[500px] overflow-x-scroll [&>*]:text-sm\",\n      children: newListTask.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"py-3 px-6 border-b\",\n          children: [task.completed ? /*#__PURE__*/_jsxDEV(CompletedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(NotCompletedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 53\n          }, this), \"\\xA0\", task.title, task.completed ? \"\" : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => completeTask(task.id),\n            className: \"float-right bg-white border rounded-[4px] px-1 ml-10 hover:text-blue-500 group hover:border-blue-500 duration-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: (buttonLoading.includes(task.id) ? \"animate-spin mr-2 \" : \"hidden \") + \"duration-300 inline-block w-3 h-3 border-t-2 rounded-full group-hover:border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), \"Mark done\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      children: [\"done \", countCompletedTasks(), \"/\", tasks.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ListTask, \"bDX645QHYm/FsHekh0Do52/4qVM=\");\n_c = ListTask;\nexport default ListTask;\nvar _c;\n$RefreshReg$(_c, \"ListTask\");","map":{"version":3,"names":["useCallback","useContext","useEffect","useState","Context","UsersService","Heading","CompletedIcon","NotCompletedIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","users","ListTask","_ref","_s","userID","buttonLoading","setButtonLoading","tasks","setTasks","todoContext","userTasks","setUserTasks","countCompletedTasks","sum","forEach","task","completed","sortList","list","result","data","map","getAllTasks","getByID","findTaskIndexByID","id","findIndex","completeTask","taskID","pre","then","res","taskChangedIndex","taskCopy","listSorted","listTask","filter","loading","undefined","newListTask","children","text","fileName","_jsxFileName","lineNumber","columnNumber","className","title","onClick","includes","length","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/LeTungEm/letungem-onlineassessment/src/components/User/Todo/ListTask/ListTask.js"],"sourcesContent":["import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { Context } from \"../../../../context/Context\";\r\nimport UsersService from \"../../../../service/UsersService\";\r\nimport Heading from \"../../../UI/Library/Heading\";\r\nimport CompletedIcon from \"../../../UI/Library/icon/CompletedIcon\";\r\nimport NotCompletedIcon from \"../../../UI/Library/icon/NotCompletedIcon\";\r\n\r\nconst users = new UsersService();\r\nconst ListTask = ({ userID }) => {\r\n  const [buttonLoading, setButtonLoading] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const { todoContext } = useContext(Context);\r\n  const { userTasks, setUserTasks } = todoContext;\r\n\r\n  const countCompletedTasks = () => {\r\n    let sum = 0;\r\n    tasks.forEach((task) => {\r\n      if (task.completed === true) {\r\n        sum++;\r\n      }\r\n    });\r\n    return sum;\r\n  };\r\n\r\n  const sortList = async (list) => {\r\n    let result = [];\r\n    let data = await list;\r\n    data.map((task) => {\r\n      if (task.completed === false) result = [task, ...result];\r\n      else result = [...result, task];\r\n      return 0;\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const getAllTasks = useCallback(async (userID) => {\r\n    let data = await users.getByID(userID);\r\n    return data.data;\r\n  }, []);\r\n\r\n  const findTaskIndexByID = (id) => {\r\n    return tasks.findIndex((task) => task.id === id);\r\n  };\r\n\r\n  const completeTask = (taskID) => {\r\n    setButtonLoading((pre) => [...pre, taskID]);\r\n    users.completeTask(taskID).then(async (res) => {\r\n      if (res.data) {\r\n        let taskChangedIndex = findTaskIndexByID(res.data.id);\r\n        let taskCopy = [...tasks];\r\n        taskCopy[taskChangedIndex] = res.data;\r\n        let listSorted = await sortList(taskCopy);\r\n        let listTask = userTasks;\r\n        listTask[userID] = listSorted;\r\n        setUserTasks(listTask);\r\n        setTasks((pre) => {\r\n          pre[taskChangedIndex] = res.data;\r\n          return pre;\r\n        });\r\n        setButtonLoading((pre) =>\r\n          pre.filter((loading) => loading !== res.data.id)\r\n        );\r\n      } else {\r\n        setButtonLoading([]);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userID) {\r\n      let listTask = userTasks;\r\n      if (listTask[userID] !== undefined) {\r\n        setTasks(listTask[userID]);\r\n      } else {\r\n        let result = getAllTasks(userID);\r\n        let listSorted = sortList(result);\r\n        listSorted.then((res) => {\r\n          listTask[userID] = res;\r\n          setUserTasks(listTask);\r\n          setTasks(res);\r\n        });\r\n      }\r\n    }\r\n  }, [getAllTasks, setUserTasks, userID, userTasks]);\r\n\r\n  let newListTask = [];\r\n  tasks.forEach((task) => {\r\n    if (task.completed === false) newListTask = [task, ...newListTask];\r\n    else newListTask = [...newListTask, task];\r\n  });\r\n  return (\r\n    <>\r\n      <Heading text=\"Tasks\" />\r\n      <ul className=\"border rounded-lg h-[500px] overflow-x-scroll [&>*]:text-sm\">\r\n        {newListTask.map((task) => {\r\n          return (\r\n            <li key={task.id} className={\"py-3 px-6 border-b\"}>\r\n              {task.completed ? <CompletedIcon /> : <NotCompletedIcon />}\r\n              &nbsp;\r\n              {task.title}\r\n              {task.completed ? (\r\n                \"\"\r\n              ) : (\r\n                <button\r\n                  onClick={() => completeTask(task.id)}\r\n                  className={\r\n                    \"float-right bg-white border rounded-[4px] px-1 ml-10 hover:text-blue-500 group hover:border-blue-500 duration-200\"\r\n                  }\r\n                >\r\n                  <span\r\n                    className={\r\n                      (buttonLoading.includes(task.id)\r\n                        ? \"animate-spin mr-2 \"\r\n                        : \"hidden \") +\r\n                      \"duration-300 inline-block w-3 h-3 border-t-2 rounded-full group-hover:border-blue-500\"\r\n                    }\r\n                  ></span>\r\n                  Mark done\r\n                </button>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <div className=\"mt-2\">\r\n        done {countCompletedTasks()}/{tasks.length}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListTask;\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACpE,SAASC,OAAO,QAAQ,6BAA6B;AACrD,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,aAAa,MAAM,wCAAwC;AAClE,OAAOC,gBAAgB,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzE,MAAMC,KAAK,GAAG,IAAIR,YAAY,CAAC,CAAC;AAChC,MAAMS,QAAQ,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC1B,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM;IAAEmB;EAAY,CAAC,GAAGrB,UAAU,CAACG,OAAO,CAAC;EAC3C,MAAM;IAAEmB,SAAS;IAAEC;EAAa,CAAC,GAAGF,WAAW;EAE/C,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIC,GAAG,GAAG,CAAC;IACXN,KAAK,CAACO,OAAO,CAAEC,IAAI,IAAK;MACtB,IAAIA,IAAI,CAACC,SAAS,KAAK,IAAI,EAAE;QAC3BH,GAAG,EAAE;MACP;IACF,CAAC,CAAC;IACF,OAAOA,GAAG;EACZ,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAOC,IAAI,IAAK;IAC/B,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIC,IAAI,GAAG,MAAMF,IAAI;IACrBE,IAAI,CAACC,GAAG,CAAEN,IAAI,IAAK;MACjB,IAAIA,IAAI,CAACC,SAAS,KAAK,KAAK,EAAEG,MAAM,GAAG,CAACJ,IAAI,EAAE,GAAGI,MAAM,CAAC,CAAC,KACpDA,MAAM,GAAG,CAAC,GAAGA,MAAM,EAAEJ,IAAI,CAAC;MAC/B,OAAO,CAAC;IACV,CAAC,CAAC;IACF,OAAOI,MAAM;EACf,CAAC;EAED,MAAMG,WAAW,GAAGnC,WAAW,CAAC,MAAOiB,MAAM,IAAK;IAChD,IAAIgB,IAAI,GAAG,MAAMpB,KAAK,CAACuB,OAAO,CAACnB,MAAM,CAAC;IACtC,OAAOgB,IAAI,CAACA,IAAI;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,iBAAiB,GAAIC,EAAE,IAAK;IAChC,OAAOlB,KAAK,CAACmB,SAAS,CAAEX,IAAI,IAAKA,IAAI,CAACU,EAAE,KAAKA,EAAE,CAAC;EAClD,CAAC;EAED,MAAME,YAAY,GAAIC,MAAM,IAAK;IAC/BtB,gBAAgB,CAAEuB,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAED,MAAM,CAAC,CAAC;IAC3C5B,KAAK,CAAC2B,YAAY,CAACC,MAAM,CAAC,CAACE,IAAI,CAAC,MAAOC,GAAG,IAAK;MAC7C,IAAIA,GAAG,CAACX,IAAI,EAAE;QACZ,IAAIY,gBAAgB,GAAGR,iBAAiB,CAACO,GAAG,CAACX,IAAI,CAACK,EAAE,CAAC;QACrD,IAAIQ,QAAQ,GAAG,CAAC,GAAG1B,KAAK,CAAC;QACzB0B,QAAQ,CAACD,gBAAgB,CAAC,GAAGD,GAAG,CAACX,IAAI;QACrC,IAAIc,UAAU,GAAG,MAAMjB,QAAQ,CAACgB,QAAQ,CAAC;QACzC,IAAIE,QAAQ,GAAGzB,SAAS;QACxByB,QAAQ,CAAC/B,MAAM,CAAC,GAAG8B,UAAU;QAC7BvB,YAAY,CAACwB,QAAQ,CAAC;QACtB3B,QAAQ,CAAEqB,GAAG,IAAK;UAChBA,GAAG,CAACG,gBAAgB,CAAC,GAAGD,GAAG,CAACX,IAAI;UAChC,OAAOS,GAAG;QACZ,CAAC,CAAC;QACFvB,gBAAgB,CAAEuB,GAAG,IACnBA,GAAG,CAACO,MAAM,CAAEC,OAAO,IAAKA,OAAO,KAAKN,GAAG,CAACX,IAAI,CAACK,EAAE,CACjD,CAAC;MACH,CAAC,MAAM;QACLnB,gBAAgB,CAAC,EAAE,CAAC;MACtB;IACF,CAAC,CAAC;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,IAAIe,MAAM,EAAE;MACV,IAAI+B,QAAQ,GAAGzB,SAAS;MACxB,IAAIyB,QAAQ,CAAC/B,MAAM,CAAC,KAAKkC,SAAS,EAAE;QAClC9B,QAAQ,CAAC2B,QAAQ,CAAC/B,MAAM,CAAC,CAAC;MAC5B,CAAC,MAAM;QACL,IAAIe,MAAM,GAAGG,WAAW,CAAClB,MAAM,CAAC;QAChC,IAAI8B,UAAU,GAAGjB,QAAQ,CAACE,MAAM,CAAC;QACjCe,UAAU,CAACJ,IAAI,CAAEC,GAAG,IAAK;UACvBI,QAAQ,CAAC/B,MAAM,CAAC,GAAG2B,GAAG;UACtBpB,YAAY,CAACwB,QAAQ,CAAC;UACtB3B,QAAQ,CAACuB,GAAG,CAAC;QACf,CAAC,CAAC;MACJ;IACF;EACF,CAAC,EAAE,CAACT,WAAW,EAAEX,YAAY,EAAEP,MAAM,EAAEM,SAAS,CAAC,CAAC;EAElD,IAAI6B,WAAW,GAAG,EAAE;EACpBhC,KAAK,CAACO,OAAO,CAAEC,IAAI,IAAK;IACtB,IAAIA,IAAI,CAACC,SAAS,KAAK,KAAK,EAAEuB,WAAW,GAAG,CAACxB,IAAI,EAAE,GAAGwB,WAAW,CAAC,CAAC,KAC9DA,WAAW,GAAG,CAAC,GAAGA,WAAW,EAAExB,IAAI,CAAC;EAC3C,CAAC,CAAC;EACF,oBACElB,OAAA,CAAAE,SAAA;IAAAyC,QAAA,gBACE3C,OAAA,CAACJ,OAAO;MAACgD,IAAI,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxBhD,OAAA;MAAIiD,SAAS,EAAC,6DAA6D;MAAAN,QAAA,EACxED,WAAW,CAAClB,GAAG,CAAEN,IAAI,IAAK;QACzB,oBACElB,OAAA;UAAkBiD,SAAS,EAAE,oBAAqB;UAAAN,QAAA,GAC/CzB,IAAI,CAACC,SAAS,gBAAGnB,OAAA,CAACH,aAAa;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGhD,OAAA,CAACF,gBAAgB;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAAC,MAE3D,EAAC9B,IAAI,CAACgC,KAAK,EACVhC,IAAI,CAACC,SAAS,GACb,EAAE,gBAEFnB,OAAA;YACEmD,OAAO,EAAEA,CAAA,KAAMrB,YAAY,CAACZ,IAAI,CAACU,EAAE,CAAE;YACrCqB,SAAS,EACP,mHACD;YAAAN,QAAA,gBAED3C,OAAA;cACEiD,SAAS,EACP,CAACzC,aAAa,CAAC4C,QAAQ,CAAClC,IAAI,CAACU,EAAE,CAAC,GAC5B,oBAAoB,GACpB,SAAS,IACb;YACD;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC,aAEV;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA,GAvBM9B,IAAI,CAACU,EAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwBZ,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLhD,OAAA;MAAKiD,SAAS,EAAC,MAAM;MAAAN,QAAA,GAAC,OACf,EAAC5B,mBAAmB,CAAC,CAAC,EAAC,GAAC,EAACL,KAAK,CAAC2C,MAAM;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAC1C,EAAA,CA1HIF,QAAQ;AAAAkD,EAAA,GAARlD,QAAQ;AA4Hd,eAAeA,QAAQ;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}